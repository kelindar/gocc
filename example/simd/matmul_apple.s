//go:build !noasm && darwin && arm64
// AUTO-GENERATED BY GOCC -- DO NOT EDIT

TEXT ·f32_axpy(SB), $0-32
	MOVD x+0(FP), R0
	MOVD y+8(FP), R1
	MOVD size+16(FP), R2
	MOVD alpha+24(FP), R3
	WORD $0xfd7bbfa9      // stp	x29, x30, [sp, #-16]!           ; 16-byte Folded Spill
	WORD $0xfd030091      // mov	x29, sp
	WORD $0x5f1000f1      // cmp	x2, #4
	WORD $0x63010054      // b.lo	LBB0_3
	WORD $0x68008052      // mov	w8, #3
	WORD $0xe90300aa      // mov	x9, x0
	WORD $0xea0301aa      // mov	x10, x1

BB0_2:
	WORD $0x2105c13c // ldr	q1, [x9], #16
	WORD $0x4201c03d // ldr	q2, [x10]
	WORD $0x2210804f // fmla.4s	v2, v1, v0[0]
	WORD $0x4205813c // str	q2, [x10], #16
	WORD $0x08110091 // add	x8, x8, #4
	WORD $0x1f0102eb // cmp	x8, x2
	WORD $0x43ffff54 // b.lo	LBB0_2

BB0_3:
	WORD $0x5f0440f2 // tst	x2, #0x3
	WORD $0xe0010054 // b.eq	LBB0_7
	WORD $0x48f47e92 // and	x8, x2, #0xfffffffffffffffc
	WORD $0x1f0102eb // cmp	x8, x2
	WORD $0x82010054 // b.hs	LBB0_7
	WORD $0x480008cb // sub	x8, x2, x8
	WORD $0x49f47ed3 // lsl	x9, x2, #2
	WORD $0x2aed7c92 // and	x10, x9, #0xfffffffffffffff0
	WORD $0x29000a8b // add	x9, x1, x10
	WORD $0x0a000a8b // add	x10, x0, x10

BB0_6:
	WORD $0x414540bc // ldr	s1, [x10], #4
	WORD $0x220140bd // ldr	s2, [x9]
	WORD $0x2108001f // fmadd	s1, s1, s0, s2
	WORD $0x214500bc // str	s1, [x9], #4
	WORD $0x080500f1 // subs	x8, x8, #1
	WORD $0x61ffff54 // b.ne	LBB0_6

BB0_7:
	WORD $0xfd7bc1a8 // ldp	x29, x30, [sp], #16             ; 16-byte Folded Reload
	WORD $0xc0035fd6 // ret

TEXT ·f32_matmul(SB), $0-32
	MOVD dst+0(FP), R0
	MOVD m+8(FP), R1
	MOVD n+16(FP), R2
	MOVD dims+24(FP), R3
	WORD $0xfd7bbfa9     // stp	x29, x30, [sp, #-16]!           ; 16-byte Folded Spill
	WORD $0xfd030091     // mov	x29, sp
	WORD $0x683c40f2     // ands	x8, x3, #0xffff
	WORD $0xe00c0054     // b.eq	LBB1_25
	WORD $0x697c50d3     // ubfx	x9, x3, #16, #16
	WORD $0x6afc70d3     // lsr	x10, x3, #48
	WORD $0x7f0450f2     // tst	x3, #0x3000000000000
	WORD $0x4b357e92     // and	x11, x10, #0xfffc
	WORD $0x40114bfa     // ccmp	x10, x11, #0, ne
	WORD $0xec979f1a     // cset	w12, hi
	WORD $0x090c00b4     // cbz	x9, LBB1_25
	WORD $0x6dfc72d3     // lsr	x13, x3, #50
	WORD $0xad0400b4     // cbz	x13, LBB1_12
	WORD $0x6c080036     // tbz	w12, #0, LBB1_19
	WORD $0x0c0080d2     // mov	x12, #0
	WORD $0x4df57ed3     // lsl	x13, x10, #2

BB1_5:
	WORD $0x0e0080d2 // mov	x14, #0
	WORD $0x8f7d099b // mul	x15, x12, x9
	WORD $0xf00302aa // mov	x16, x2

BB1_6:
	WORD $0xd1010f8b // add	x17, x14, x15
	WORD $0x207871bc // ldr	s0, [x1, x17, lsl #2]
	WORD $0xf10300aa // mov	x17, x0
	WORD $0xe30310aa // mov	x3, x16
	WORD $0x64008052 // mov	w4, #3

BB1_7:
	WORD $0x6104c13c // ldr	q1, [x3], #16
	WORD $0x2202c03d // ldr	q2, [x17]
	WORD $0x2210804f // fmla.4s	v2, v1, v0[0]
	WORD $0x2206813c // str	q2, [x17], #16
	WORD $0x84100091 // add	x4, x4, #4
	WORD $0x9f000aeb // cmp	x4, x10
	WORD $0x43ffff54 // b.lo	LBB1_7
	WORD $0xf1030baa // mov	x17, x11

BB1_9:
	WORD $0x23f67ed3 // lsl	x3, x17, #2
	WORD $0x016a63bc // ldr	s1, [x16, x3]
	WORD $0x026863bc // ldr	s2, [x0, x3]
	WORD $0x2108001f // fmadd	s1, s1, s0, s2
	WORD $0x016823bc // str	s1, [x0, x3]
	WORD $0x31060091 // add	x17, x17, #1
	WORD $0x5f0111eb // cmp	x10, x17
	WORD $0x21ffff54 // b.ne	LBB1_9
	WORD $0xce050091 // add	x14, x14, #1
	WORD $0x10020d8b // add	x16, x16, x13
	WORD $0xdf0109eb // cmp	x14, x9
	WORD $0x01fdff54 // b.ne	LBB1_6
	WORD $0x8c050091 // add	x12, x12, #1
	WORD $0x00000d8b // add	x0, x0, x13
	WORD $0x9f0108eb // cmp	x12, x8
	WORD $0x21fcff54 // b.ne	LBB1_5
	WORD $0x3a000014 // b	LBB1_25

BB1_12:
	WORD $0x2c070034 // cbz	w12, LBB1_25
	WORD $0x0c0080d2 // mov	x12, #0
	WORD $0x4b010bcb // sub	x11, x10, x11
	WORD $0x6dfc6ed3 // lsr	x13, x3, #46
	WORD $0xae357c92 // and	x14, x13, #0x3fff0
	WORD $0x0d000e8b // add	x13, x0, x14
	WORD $0x4af57ed3 // lsl	x10, x10, #2
	WORD $0x4e000e8b // add	x14, x2, x14

BB1_14:
	WORD $0x0f0080d2 // mov	x15, #0
	WORD $0x907d099b // mul	x16, x12, x9
	WORD $0xf1030eaa // mov	x17, x14

BB1_15:
	WORD $0xe001108b // add	x0, x15, x16
	WORD $0x207860bc // ldr	s0, [x1, x0, lsl #2]
	WORD $0xe00311aa // mov	x0, x17
	WORD $0xe2030daa // mov	x2, x13
	WORD $0xe3030baa // mov	x3, x11

BB1_16:
	WORD $0x014440bc // ldr	s1, [x0], #4
	WORD $0x420040bd // ldr	s2, [x2]
	WORD $0x2108001f // fmadd	s1, s1, s0, s2
	WORD $0x414400bc // str	s1, [x2], #4
	WORD $0x630400f1 // subs	x3, x3, #1
	WORD $0x61ffff54 // b.ne	LBB1_16
	WORD $0xef050091 // add	x15, x15, #1
	WORD $0x31020a8b // add	x17, x17, x10
	WORD $0xff0109eb // cmp	x15, x9
	WORD $0x41feff54 // b.ne	LBB1_15
	WORD $0x8c050091 // add	x12, x12, #1
	WORD $0xad010a8b // add	x13, x13, x10
	WORD $0x9f0108eb // cmp	x12, x8
	WORD $0x61fdff54 // b.ne	LBB1_14
	WORD $0x1b000014 // b	LBB1_25

BB1_19:
	WORD $0x0b0080d2 // mov	x11, #0
	WORD $0x4cf57ed3 // lsl	x12, x10, #2

BB1_20:
	WORD $0x0d0080d2 // mov	x13, #0
	WORD $0x6e7d099b // mul	x14, x11, x9
	WORD $0xef0302aa // mov	x15, x2

BB1_21:
	WORD $0xb0010e8b // add	x16, x13, x14
	WORD $0x3008108b // add	x16, x1, x16, lsl #2
	WORD $0x00ca404d // ld1r.4s	{ v0 }, [x16]
	WORD $0xf00300aa // mov	x16, x0
	WORD $0xf1030faa // mov	x17, x15
	WORD $0x63008052 // mov	w3, #3

BB1_22:
	WORD $0x2106c13c // ldr	q1, [x17], #16
	WORD $0x0202c03d // ldr	q2, [x16]
	WORD $0x22cc204e // fmla.4s	v2, v1, v0
	WORD $0x0206813c // str	q2, [x16], #16
	WORD $0x63100091 // add	x3, x3, #4
	WORD $0x7f000aeb // cmp	x3, x10
	WORD $0x43ffff54 // b.lo	LBB1_22
	WORD $0xad050091 // add	x13, x13, #1
	WORD $0xef010c8b // add	x15, x15, x12
	WORD $0xbf0109eb // cmp	x13, x9
	WORD $0x01feff54 // b.ne	LBB1_21
	WORD $0x6b050091 // add	x11, x11, #1
	WORD $0x00000c8b // add	x0, x0, x12
	WORD $0x7f0108eb // cmp	x11, x8
	WORD $0x21fdff54 // b.ne	LBB1_20

BB1_25:
	WORD $0xfd7bc1a8 // ldp	x29, x30, [sp], #16             ; 16-byte Folded Reload
	WORD $0xc0035fd6 // ret
